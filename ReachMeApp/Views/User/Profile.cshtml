@model DomainLayer.Model.User
@using ServiceLayer.Service.Implementation
@using DomainLayer.Dto
@using DomainLayer.Model 
@using ReachMeApp.Components
@using Microsoft.AspNetCore.Http;
@using System.Security.Claims;
@using System.Threading;
@using System.IdentityModel.Tokens.Jwt
@inject HttpContextAccessor httpContextAccessor
@inject UserService Service

@{
    ViewData["Title"] = "Profile";
    int GetCurrentId()
    {
        var token = httpContextAccessor.HttpContext.Request.Cookies["Jwt"];
        var handler = new JwtSecurityTokenHandler();
        var jwtSecurityToken = handler.ReadJwtToken(token);
        var tokenS = jwtSecurityToken as JwtSecurityToken;
        return int.Parse(tokenS.Claims.First(claim => claim.Type == ClaimTypes.NameIdentifier).Value);
    }
}

@Html.Partial("NavigationBar", new NavigationDto())

<div class="d-flex flex-column align-items-center">
    <div class="box-shadow w-50 p-3 d-flex flex-column m-3">
        <div class="d-flex flex-row justify-content-between align-items-center">
            @if (Model.ProfilePic == null)
            {
                <img src="~/images/defaultProfilePicture.jpeg" class="profile-picture rounded-circle border-info" />
            }
            else
            {
                <img src="data:image/jpg;base64,@Model.ProfilePic" class="profile-picture rounded-circle border-info" />
            }
            <p>Posts: @Service.PostsCount(Model.Id)</p>
            <p><a asp-controller="User" asp-action="Followers" asp-route-username="@Model.Username">Followers: </a> @Service.FollowersCount(Model.Id)</p>
            <p><a asp-controller="User" asp-action="Followings" asp-route-username="@Model.Username">Following: </a> @Service.FollowingsCount(Model.Id)</p>
        </div>
        <div class="d-flex flex-column">
            <p>@Model.Username</p>
            <p>@Model.ProfileBio</p>
        </div>
        @(await Html.RenderComponentAsync<FollowButton>(RenderMode.ServerPrerendered, new {FollowerId = GetCurrentId(), FollowingId = Model.Id}))
    </div>
    <hr />

    @(await Html.RenderComponentAsync<PostsList>(RenderMode.ServerPrerendered, new {MyId = GetCurrentId(), UserId = Model.Id, Posts = Service.GetAllPosts(Model.Id) }))
</div>

<script src="~/_framework/blazor.server.js"></script>
